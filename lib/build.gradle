apply plugin: 'com.android.library'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'FFmpegVideoRecorder'

    publishedGroupId = 'com.amosyuen.ffmpegvideorecorder'
    artifact = 'ffmpeg-video-recorder'
    libraryName = 'FFmpegVideoRecorder'

    libraryDescription = 'Customizable Video Recording Library for Android'

    siteUrl = 'https://github.com/amosyuen/FFmpegVideoRecorder'
    gitUrl = 'https://github.com/amosyuen/FFmpegVideoRecorder.git'

    libraryVersion = '1.0.0'

    developerId = 'amosyuen'
    developerName = 'Amos Yuen'
    developerEmail = 'amosyuen@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 18
        versionCode 1
        versionName '1.0.0'

        // Android has problems including the javacv native libraries, so we must include them
        // manually rather than using gradle.
        // https://github.com/bytedeco/javacpp-presets/wiki/The-UnsatisfiedLinkError-X-File-(a-real-experience)
        // Compile the *.so files extracted from javacpp-presets:ffmpeg:3.1.2-1.2:android-*.jar
        ndk { abiFilters "armeabi", "armeabi-v7a", "x86" }
    }

    resourcePrefix 'ffmpegvideorecorder_'

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.getkeepsafe.relinker:relinker:1.2.2'

    compile files('libs/ffmpeg-3.1.2-1.2.jar')
    // javacpp v1.2 has a crashing bug https://github.com/bytedeco/javacv/issues/412#issuecomment-220718619
    compile files('libs/javacpp-1.2.4.jar')
    compile files('libs/javacv-1.2.jar')
}

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'

// Based off https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle
apply plugin: 'com.jfrog.bintray'

version = libraryVersion

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}